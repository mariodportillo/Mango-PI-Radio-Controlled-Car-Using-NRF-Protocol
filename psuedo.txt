Add your ideas on how the code will be structured

Pi #1

1. Read joystick input
int x_value = mcp3008_read_channel(0);  // Read X-axis
int y_value = mcp3008_read_channel(1);  // Read Y-axis

2. Convert values to speed/direction

3. Send thru NRF24
nrf24_transmit(tx_data);


Pi #2

1. Wait for data
if (is_data_available(1)) {  
    nrf24_receive(rx_data);
}

2. Parse the received data

3. Set the motor speed using PWM
pwm_set_duty(PWM#, motor_A);
pwm_set_duty(PWM#, motor_B);




Notes on MCP3008:
MCP returns a 10-bit value starting off with a NULL bit:
    

We wanna set single-ended configuration
1<channel number>

    tx_buf[0] = 1; start bit
    tx_buf[1] = (8 | channel) << 4; single-ended mode, channel number
    tx_buf[2] = 0;

